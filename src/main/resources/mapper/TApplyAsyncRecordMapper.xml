<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalaoyang.dao.TApplyAsyncRecordMapper">
  <resultMap id="BaseResultMap" type="com.dalaoyang.entity.TApplyAsyncRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="apply_id" jdbcType="VARCHAR" property="applyId" />
    <result column="apply_type" jdbcType="TINYINT" property="applyType" />
    <result column="apply_type_name" jdbcType="VARCHAR" property="applyTypeName" />
    <result column="service_name" jdbcType="VARCHAR" property="serviceName" />
    <result column="retry_times" jdbcType="TINYINT" property="retryTimes" />
    <result column="last_call_time" jdbcType="TIMESTAMP" property="lastCallTime" />
    <result column="consume_time" jdbcType="INTEGER" property="consumeTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="compensate_status" jdbcType="TINYINT" property="compensateStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.dalaoyang.entity.TApplyAsyncRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="call_param" jdbcType="LONGVARCHAR" property="callParam" />
    <result column="call_result" jdbcType="LONGVARCHAR" property="callResult" />
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, apply_id, apply_type, apply_type_name, service_name, retry_times, last_call_time, 
    consume_time, `status`, compensate_status, create_time, update_time, create_user_id, 
    update_user_id, del_flag
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    call_param, call_result, remark
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.dalaoyang.entity.TApplyAsyncRecordExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_apply_async_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.dalaoyang.entity.TApplyAsyncRecordExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_apply_async_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_apply_async_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_apply_async_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.dalaoyang.entity.TApplyAsyncRecordExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_apply_async_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dalaoyang.entity.TApplyAsyncRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_apply_async_record (id, apply_id, apply_type, 
      apply_type_name, service_name, retry_times, 
      last_call_time, consume_time, `status`, 
      compensate_status, create_time, update_time, 
      create_user_id, update_user_id, del_flag, 
      call_param, call_result, remark
      )
    values (#{id,jdbcType=BIGINT}, #{applyId,jdbcType=VARCHAR}, #{applyType,jdbcType=TINYINT}, 
      #{applyTypeName,jdbcType=VARCHAR}, #{serviceName,jdbcType=VARCHAR}, #{retryTimes,jdbcType=TINYINT}, 
      #{lastCallTime,jdbcType=TIMESTAMP}, #{consumeTime,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{compensateStatus,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER}, #{delFlag,jdbcType=TINYINT}, 
      #{callParam,jdbcType=LONGVARCHAR}, #{callResult,jdbcType=LONGVARCHAR}, #{remark,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dalaoyang.entity.TApplyAsyncRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_apply_async_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="applyId != null">
        apply_id,
      </if>
      <if test="applyType != null">
        apply_type,
      </if>
      <if test="applyTypeName != null">
        apply_type_name,
      </if>
      <if test="serviceName != null">
        service_name,
      </if>
      <if test="retryTimes != null">
        retry_times,
      </if>
      <if test="lastCallTime != null">
        last_call_time,
      </if>
      <if test="consumeTime != null">
        consume_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="compensateStatus != null">
        compensate_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="callParam != null">
        call_param,
      </if>
      <if test="callResult != null">
        call_result,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="applyId != null">
        #{applyId,jdbcType=VARCHAR},
      </if>
      <if test="applyType != null">
        #{applyType,jdbcType=TINYINT},
      </if>
      <if test="applyTypeName != null">
        #{applyTypeName,jdbcType=VARCHAR},
      </if>
      <if test="serviceName != null">
        #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="retryTimes != null">
        #{retryTimes,jdbcType=TINYINT},
      </if>
      <if test="lastCallTime != null">
        #{lastCallTime,jdbcType=TIMESTAMP},
      </if>
      <if test="consumeTime != null">
        #{consumeTime,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="compensateStatus != null">
        #{compensateStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="callParam != null">
        #{callParam,jdbcType=LONGVARCHAR},
      </if>
      <if test="callResult != null">
        #{callResult,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dalaoyang.entity.TApplyAsyncRecordExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from t_apply_async_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_apply_async_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.applyId != null">
        apply_id = #{record.applyId,jdbcType=VARCHAR},
      </if>
      <if test="record.applyType != null">
        apply_type = #{record.applyType,jdbcType=TINYINT},
      </if>
      <if test="record.applyTypeName != null">
        apply_type_name = #{record.applyTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceName != null">
        service_name = #{record.serviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.retryTimes != null">
        retry_times = #{record.retryTimes,jdbcType=TINYINT},
      </if>
      <if test="record.lastCallTime != null">
        last_call_time = #{record.lastCallTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.consumeTime != null">
        consume_time = #{record.consumeTime,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.compensateStatus != null">
        compensate_status = #{record.compensateStatus,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=TINYINT},
      </if>
      <if test="record.callParam != null">
        call_param = #{record.callParam,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.callResult != null">
        call_result = #{record.callResult,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_apply_async_record
    set id = #{record.id,jdbcType=BIGINT},
      apply_id = #{record.applyId,jdbcType=VARCHAR},
      apply_type = #{record.applyType,jdbcType=TINYINT},
      apply_type_name = #{record.applyTypeName,jdbcType=VARCHAR},
      service_name = #{record.serviceName,jdbcType=VARCHAR},
      retry_times = #{record.retryTimes,jdbcType=TINYINT},
      last_call_time = #{record.lastCallTime,jdbcType=TIMESTAMP},
      consume_time = #{record.consumeTime,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=TINYINT},
      compensate_status = #{record.compensateStatus,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      del_flag = #{record.delFlag,jdbcType=TINYINT},
      call_param = #{record.callParam,jdbcType=LONGVARCHAR},
      call_result = #{record.callResult,jdbcType=LONGVARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_apply_async_record
    set id = #{record.id,jdbcType=BIGINT},
      apply_id = #{record.applyId,jdbcType=VARCHAR},
      apply_type = #{record.applyType,jdbcType=TINYINT},
      apply_type_name = #{record.applyTypeName,jdbcType=VARCHAR},
      service_name = #{record.serviceName,jdbcType=VARCHAR},
      retry_times = #{record.retryTimes,jdbcType=TINYINT},
      last_call_time = #{record.lastCallTime,jdbcType=TIMESTAMP},
      consume_time = #{record.consumeTime,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=TINYINT},
      compensate_status = #{record.compensateStatus,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      del_flag = #{record.delFlag,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dalaoyang.entity.TApplyAsyncRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_apply_async_record
    <set>
      <if test="applyId != null">
        apply_id = #{applyId,jdbcType=VARCHAR},
      </if>
      <if test="applyType != null">
        apply_type = #{applyType,jdbcType=TINYINT},
      </if>
      <if test="applyTypeName != null">
        apply_type_name = #{applyTypeName,jdbcType=VARCHAR},
      </if>
      <if test="serviceName != null">
        service_name = #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="retryTimes != null">
        retry_times = #{retryTimes,jdbcType=TINYINT},
      </if>
      <if test="lastCallTime != null">
        last_call_time = #{lastCallTime,jdbcType=TIMESTAMP},
      </if>
      <if test="consumeTime != null">
        consume_time = #{consumeTime,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="compensateStatus != null">
        compensate_status = #{compensateStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="callParam != null">
        call_param = #{callParam,jdbcType=LONGVARCHAR},
      </if>
      <if test="callResult != null">
        call_result = #{callResult,jdbcType=LONGVARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dalaoyang.entity.TApplyAsyncRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_apply_async_record
    set apply_id = #{applyId,jdbcType=VARCHAR},
      apply_type = #{applyType,jdbcType=TINYINT},
      apply_type_name = #{applyTypeName,jdbcType=VARCHAR},
      service_name = #{serviceName,jdbcType=VARCHAR},
      retry_times = #{retryTimes,jdbcType=TINYINT},
      last_call_time = #{lastCallTime,jdbcType=TIMESTAMP},
      consume_time = #{consumeTime,jdbcType=INTEGER},
      `status` = #{status,jdbcType=TINYINT},
      compensate_status = #{compensateStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=TINYINT},
      call_param = #{callParam,jdbcType=LONGVARCHAR},
      call_result = #{callResult,jdbcType=LONGVARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dalaoyang.entity.TApplyAsyncRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_apply_async_record
    set apply_id = #{applyId,jdbcType=VARCHAR},
      apply_type = #{applyType,jdbcType=TINYINT},
      apply_type_name = #{applyTypeName,jdbcType=VARCHAR},
      service_name = #{serviceName,jdbcType=VARCHAR},
      retry_times = #{retryTimes,jdbcType=TINYINT},
      last_call_time = #{lastCallTime,jdbcType=TIMESTAMP},
      consume_time = #{consumeTime,jdbcType=INTEGER},
      `status` = #{status,jdbcType=TINYINT},
      compensate_status = #{compensateStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>